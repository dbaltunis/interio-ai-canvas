
import { Button } from "@/components/ui/button";
import { Plus } from "lucide-react";
import { useCreateQuote } from "@/hooks/useQuotes";
import { useClients, useCreateClient } from "@/hooks/useClients";
import { useCreateProject } from "@/hooks/useProjects";
import { useToast } from "@/hooks/use-toast";

interface JobsPageHeaderProps {
  onQuoteSelect?: (quoteId: string) => void;
}

export const JobsPageHeader = ({ onQuoteSelect }: JobsPageHeaderProps) => {
  const createQuote = useCreateQuote();
  const createClient = useCreateClient();
  const createProject = useCreateProject();
  const { data: clients } = useClients();
  const { toast } = useToast();

  const handleCreateQuote = async () => {
    try {
      let clientId = clients?.[0]?.id;
      
      // If no clients exist, create a default one first
      if (!clientId) {
        console.log("No clients found, creating default client");
        const newClient = await createClient.mutateAsync({
          name: "Default Client",
          email: "client@example.com",
          phone: "",
          address: "",
          city: "",
          state: "",
          zip_code: "",
          notes: "Auto-created default client"
        });
        clientId = newClient.id;
      }

      // Create a project first (required for quote)
      const newProject = await createProject.mutateAsync({
        name: `Project ${Date.now()}`,
        client_id: clientId,
        status: "planning",
        priority: "medium"
      });

      // Create the quote
      const newQuote = await createQuote.mutateAsync({
        client_id: clientId,
        project_id: newProject.id,
        quote_number: "", // Will be auto-generated by the trigger
        status: "draft",
        subtotal: 0,
        tax_rate: 0,
        tax_amount: 0,
        total_amount: 0
      });
      
      if (onQuoteSelect) {
        onQuoteSelect(newQuote.id);
      }
    } catch (error) {
      console.error("Failed to create quote:", error);
      toast({
        title: "Error",
        description: "Failed to create quote. Please try again.",
        variant: "destructive"
      });
    }
  };

  return (
    <div className="flex items-center justify-between">
      <div>
        <h1 className="text-3xl font-bold tracking-tight">Jobs</h1>
        <p className="text-muted-foreground">
          Manage your window treatment projects and quotes
        </p>
      </div>
      <Button onClick={handleCreateQuote} className="flex items-center space-x-2">
        <Plus className="h-4 w-4" />
        <span>New Quote</span>
      </Button>
    </div>
  );
};
